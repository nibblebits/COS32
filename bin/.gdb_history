layout asm
stepi
info regs
info registers
stepi
nexti
info registers
add-symbol-file ../build/kernelfull.o 0x100000
break process_save_state 
c
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
next
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break process_save_state
c
next
print proc->registers.sp
print proc->registers
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break isr80h_command1_print 
c
next
print msg_user_space_addr 
print frame
print *frame
xdd 50
x/50 6291436
print (char*)(4194316)
process_page()
call process_page()
print (char*)(4194316)
print (char*)(4194300)
c
print msg_user_space_addr 
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
add-symbol-file ../build/kernelfull.o 0x100000
break process_save_state 
c
next
print proc->registers.sp
print *proc->registers.sp
x/20 proc->Registers.sp
x/20 proc->registers.sp
xd/20 proc->registers.sp
xx/20 proc->registers.sp
x/20 proc->registers.sp
p/x proc->registers.sp
xddd proc->registers.sp
xxd
define xxd
shell xxd dump.bin
end
xxd proc->registers.sp 20
define xxd
dump binary memory dump.bin $arg0 $arg0+arg1
shell xxd dump.bin
end
xxd proc->registers.sp 20
define xxd
dump binary memory dump.bin $arg0 $arg0+$arg1
shell xxd dump.bin
end
xxd proc->registers.sp 20
xxd proc->registers.sp 50
xxd proc->registers.sp 60
(uint32_t*)(proc->registers.sp)
*(uint32_t*)(proc->registers.sp)
print *(uint32_t*)(proc->registers.sp)
p/x *(uint32_t*)(proc->registers.sp)
p/x *(uint32_t*)(proc->registers.sp)[0]
p/x (uint32_t*)(proc->registers.sp)[0]
p/x ((uint32_t*)(proc->registers.sp))[0]
p/x ((uint32_t*)(proc->registers.sp))[1]
p/x ((uint32_t*)(proc->registers.sp))[2]
p/x ((uint32_t*)(proc->registers.sp))[]
p/x ((uint32_t*)(proc->registers.sp))[]
p/x ((uint32_t*)(proc->registers.sp))[3]
p/x ((uint32_t*)(proc->registers.sp))[0]
p/x ((uint32_t*)(proc->registers.sp))[1]
p/x ((uint32_t*)(proc->registers.sp))[0]
next
print frame
print *frame
next
layout asm
info registers
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break isr80h_wrapper
layout asm
c
print $esp
x/50 0x5fffec
print $esp
xxd 0x5fffec 50
p/10 0x5fffec
p/x 0x555ec
print $esp
p/x 50
p/5
x/5 
x/5 0x5fffec
x/20 0x5fffec
call process_page()
x/20 0x3ffffc
print $eax
print $ebx
print $esp
c
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break *0x400000
c
layout asm
info regs
info registers
stepi
info registers
stepi
info registers
stepi
nexti
info registers
stepi
info registers
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break isr80h_handle
break isr80h_handler
c
print frame
print *frame
print command
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break isr80h_wrapper 
layout asm
c
print $esp
stepi
print $ebp
print $ebp+4
print $esp
stepi
print $ebx
print $ebp+4
print [$ebp+4]
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break *0x400000
c
layout asm
stepi
nexti
print $eax
c
nexti
print $eax
nexti
print $eax
c
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break *0x400000
c
layout asm
nexti
print $eax
c
nexti
print $eax
print 0x103e35
print *(char*)(0x103e35)
c
nexti
print $eax
nexti
print $eax
break isr80h_handle_command
c
layout
layout prev
next
print result
next
c
next
c
next
step
next
print key
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break *0x400000
c
layout asm
next
nexti
stepi
nexti
c
add-symbol-file ../build/kernelfull.o 0x100000
break *0x400000
c
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
layout asm
nexti
stepi
nexti
stepi
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break *0x400000
c
layout asm
stepi
nexti
nexti
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break src/keyboard/classic.c:184
c
break src/keyboard/classic.c:182
c
break classic_keyboard_handle_interrupt 
c
bt
print key
break fkeylistener_special
c
c
c
c
c
c
bt
btr
bt
add-symbol-file ../build/kernelfull.o 0x100000
break src/keyboard/classic.c:176
c
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
c
c
delete
break src/keyboard/classic.c:182
c
c
print special_index
print scancode
