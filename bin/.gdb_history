target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break user_mode_enter
c
layout asm
stepi
print $ebx
set ((struct registers*))($ebx)->eax = 50
set ((struct registers*)($ebx)->eax = 50
set ((struct registers*)($ebx))->eax = 50
stepi
print $eax
stepi
print $eax
stepi
print $eax
info registers
stepi
info registers
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break *0x400000
layout asm
c
stepi
info registers
wicked :)
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break fkeylistener.c:44
c
break fkeylistener.c:41
c
step
next
step
print task
print *task
next
step
print task->page_directory->directory_entry 
step
step
step
layout asm
stpei
stepi
nexti
stepi
info registers
stepi
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break fkeylistener.c:42
c
print process
print *process
add-symbol-file ../build/kernelfull.o 0x100000
break idt.c:60
c
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
c
print frame
print *frame
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break idt.c:60
c
print *frame
c
c
c
c
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
c
break fkeylistener.c:49
c
layout asm
print process->task.registers
stepi
nexti
stepi
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break fkeylistener.c:49
c
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
c
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
c
c
c
add-symbol-file ../build/kernelfull.o 0x100000
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break process_start
c
c
next
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break fkeylistener.c:64
c
step
next
print process->task.registers
clayout asm
layout asm
stepi
nexti
c
info registers
set $cr0 = $cr0 & 0x200
c
c
c
c
bt
c
info registers
info registers
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
info registers
info registers
info registers
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
add-symbol-file ../build/kernelfull.o 0x100000
break fkeylistener.c:63
c
next
stepi
stepi
nexti
bt
stepi
layout asm
stepi
c
info registers
set $cr0 = 0x80000011 & 0x200
c
info registers
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
info registers
set $eflags = $eflags & 0x200
c
info registers
c
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
info registers
set $eflags = 0x216 | 0x200
info registers
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
gdb
break interrupt_handler
c
c
c
c
c
c
c
c
next
c
next
print interrupt_callbacks[interrupt]
print 0x21
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break kernel.c:316
c
print res
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break process.c:146
c
print filename
next
print filename
print fd
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break fopen
c
next
print disk
print drive_no
break classic_keyboard_handle_interrupt
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break kernel_main
c
next
stepi
stepi
step
print process_slot
step
nexti
next
print res
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break process_load_for_slot
c
step
next
step
next
print len
next
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break fs_valid_path_format
c
next
print len
filename[0]
print filename[0]
print filename[1]
print &filename[1]
step
step
print c1
print c2
step
step
