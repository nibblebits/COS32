break elf_load_section
c
next
print *phdr
next
print *section
c
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break elf_load_sections
c
next
print elf_program_header
print *header
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
add-symbol-file ../src/programs/start/start.elf 0x400000
c
print info
add-symbol-file ../src/programs/start/start.elf 0x400000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break itoa
c
next
layout asm
stepi
add-symbol-file ../src/programs/start/start.elf 0x400000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break itoa
c
layout asm
stepi
stepi
stepi
add-symbol-file ../src/programs/start/start.elf 0x400000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break itoa
c
layout asm
stepi
add-symbol-file ../src/programs/start/start.elf 0x400000
break itoa
c
add-symbol-file ../src/programs/start/start.elf 0x400000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
bt
add-symbol-file ../src/programs/start/start.elf 0x400000
break itoa
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
bt
add-symbol-file ../src/programs/start/start.elf 0x400000
break main
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
next
step
next
add-symbol-file ../src/programs/start/start.elf 0x400000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break iota
break atoi
break atoi
symbols
break itoa
c
layout asm
stepi
add-symbol-file ../src/programs/start/start.elf 0x400000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break iota
break itoa 
c
layout asm
stepi
add-symbol-file ../src/programs/start/start.elf 0x400000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break itoa 
c
next
layout asm
stepi
add-symbol-file ../src/programs/start/start.elf 0x400000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break itoa
c
layout asm
stepi
add-symbol-file ../src/programs/start/start.elf 0x400000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break itoa
c
next
add-symbol-file ../src/programs/start/start.elf 0x400000
break iota
break itoa
c
add-symbol-file ../src/programs/start/start.elf 0x400000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
layout asm
stepi
add-symbol-file ../src/programs/start/start.elf 0x400000
add-symbol-file ../build/kernelfull.o 0x100000
break elf_load_section
c
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
next
print phdr->p_filesz 
next
print section->phys_end
print phys_addr
print section->phys_
print section->phys_addr 
c
next
print phdr->p_filesz 
next
print (const char*)(data_ptr)
c
add-symbol-file ../build/kernelfull.o 0x100000
break fread
c
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
next
step
next
print size
print nmemb
c
c
next
step
next
print size
print nmemb
step
next
print total_sectors_to_read 
next
print size
next
print buf
next
pirnt item
print item
next
print descriptor->pos
print size
print item->filesize
next
print first_cluster_abs 
ext
next
print file_first_sector
print offset_bytes
next
print offset_sector
print offset_relative_remainder 
printabs_file_sector
print abs_file_sector
next
print total_sectors_to_read
print abs_file_sector
print buf
print buf[0x201]
print buf[0x200]
print buf[0x200-1]
print buf[0x200-2]
print buf[0x200-3]
print buf[0x201]
print buf[0x202]
print buf[0x203]
print buf[0x204]
print buf[0x205]
print buf[0x206]
print buf[0x207]
print buf[0x208]
print abs_file_sector
print *fat_private
print offset_bytes
print offset_bytes
print offset_bytes
print buf
print total_sectors_to_read
print total_sectors_to_read * disk->sector_size
print buf[0x200]
print buf[0x200-1]
print (int)buf[0x200-1]
print (unsigned int)buf[0x200-1]
print (unsigned char)buf[0x200-1]
print abs_file_sector
print total_sectors_to_read 
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break fopen
delete
break fread
c
next
c
c
next
break disk_read_sector
c
next
break disk.c:38
print buf
print (const char*) buf
print (const char*) buf[0x200]
print ((const char*)buf)[0x200]
print ((const char*)buf)[0x201]
print ((const char*)buf)[0x200-1]
print ((const char*)buf)[0x200-2]
print ((const char*)buf)[0x200-3]
next
break disk.c:38
c
c
c
c
c
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break disk_read_sector
c
c
c
c
c
next
print lba >> 24
print lba >> 24 | 0xE0
next
print total
print total & 0xff
next
print lba & 0xff
print lba >> 8
next
print lba >> 16
next
bt
break fat16.c:253
c
print size
print offset_relative_remainder
print buf[0x200]
print buf[0x201]
print buf[0x202]
print buf[0x203]
print buf[0x200-1]
print buf[0x200-1]
