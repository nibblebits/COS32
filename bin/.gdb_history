stepi
stepi
stepi
info registers
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break user_mode_enter
c
layout asm
stepi
info registers
add-symbol-file ../build/kernelfull.o 0x100000
break user_mode_enter#
break user_mode_enter
c
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
layout asm
stepi
print $edi
stepi
print $esi
stepi
print $ebp
stepi
info registers
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break user_mode_enter
layout asm
c
stepi
print $edi
stepi
stepi
info registers
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break restore_general_purpose_registers 
c
layout asm
stepi
print $edi
info registers
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break process
break process_start
c
next
layout asm
stepi
print $eax
print *(struct registers*)($eax)
stepi
print $ebx
print *(struct registers*)($ebx)
stepi
print $edi
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break restore_general_purpose_registers 
LAYOUT ASM
layout asm
c
stepi
print $edi
stepi
print $esi
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break process_start
c
next
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
next
layout asm
stepi
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break process_start
c
next
layout asm
stepi
print $edi
stepi
info registers
info registers
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break process_start 
c
next
print process
print *process
add-symbol-file ../build/kernelfull.o 0x100000
break *0x400000
c
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
break process_start 
c
next
layout asm
stepi
nexti
next
stepi
c
next
next
stepi
print $esp
step
nexti
stepi
print $esp
stepi
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break *0x400000
c
break process_start
c
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break user_mode_enter
c
layout asm
stepi
nexti
stepi
info registers
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break user_mode_enter
c
layout asm
print $esp
stepi
print $esp
stepi
print $esp
stepi
print *(unsigned int*)($ebx+0x20)
print *(unsigned int*)($ebp+8)
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
layout asm
break user_mode_enter
c
stepi
print $ebx
nexti
nexti
nexti
nexti
info registers
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break process_start
c
next
print process->task.registers
set process->task.registers.eax = 50
print process->task.registers
next
layout asm
stepi
stepi
stepi
print $eax
print $ebx
print (unsigned int)($ebx)
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break process_start
c
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
c
next
layout asm
stepi
print $ebx
print (struct registers*)($ebx)
print *(struct registers*)($ebx)
set ((struct registeres*)($ebx))->eax = 50
set ((struct registers*)($ebx))->eax = 50
print *(struct registers*)($ebx)
stepi
print $eax
print $eax
print $ebx
print ($ebp+4)
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break user_mode_enter
c
layout asm
stepi
bt
stepi
bt
stepi
bt
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break user_mode_enter
c
layout asm
stepi
stepi
bt
stepi
c
bt
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break user_mode_enter
c
layout asm
stepi
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break process_start
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break user_mode_enter
c
layout asm
stepi
print $ebx
set ((struct registers*))($ebx)->eax = 50
set ((struct registers*)($ebx)->eax = 50
set ((struct registers*)($ebx))->eax = 50
stepi
print $eax
stepi
print $eax
stepi
print $eax
info registers
stepi
info registers
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -S -gdb stdio -hda ./os.bin -m 512
break *0x400000
layout asm
c
stepi
info registers
wicked :)
