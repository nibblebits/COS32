print ((const char*)(p_header))[28]
print ((const char*)(p_header))[29]
print ((const char*)(p_header))[30]
print ((const char*)(p_header))[31]
print ((const char*)(p_header))[32]
print ((const char*)(p_header))[33]
print ((const char*)(p_header))[34]
print ((const char*)(p_header))[34]
print ((const char*)(p_header))[35]
print ((const char*)(p_header))[36]
print ((const char*)(p_header))[37]
print ((const char*)(p_header))[38]
print ((const char*)(p_header))[39]
print ((const char*)(p_header))[40]
print ((const char*)(p_header))[41]
print ((const char*)(p_header))[42]
print ((const char*)(p_header))[42]
print ((const char*)(p_header))[41]
print ((const char*)(p_header))[40]
print ((const char*)(p_header))[39]
print ((const char*)(p_header))[38]
print ((const char*)(p_header))[37]
print elf_header->e_shoff + (elf_header->e_shentsize * index)
print ((const char*)(p_header))[34]
print ((const char*)(p_header))[33]
print *p_header
break *0x400000
c
c
c
c
c
layout asm
stepi
delete
c
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break elf_load_section
c
next
c
next
print section_header->sh_offset
print *section_header
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break elf_load_section
delete
break elf_load_section_header
break elf_read_section_header 
c
next
c
next
print p_header
print *p_header
bt
next
print *process
bt
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break elf_read_section_header 
c
c
next
print *p_header
bt
c
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break elf_read_section_header 
c
c
next
print elf_header->e_shoff + (elf_header->e_shentsize * index)
print (const char*)(p_header)
print (const char*)(p_header)[0]
print ((const char*)(p_header))[0]
print ((const char*)(p_header))[10]
print ((const char*)(p_header))[14]
print ((const char*)(p_header))[17]
print ((const char*)(p_header))[16]
print ((const char*)(p_header))[17]
print ((const char*)(p_header))[14]
print ((const char*)(p_header))[18]
print ((const char*)(p_header))[17]
print ((const char*)(p_header))[16]
print ((const char*)(p_header))[15]
print ((const char*)(p_header))[14]
print ((const char*)(p_header))[14]
print ((const char*)(p_header))[15]
print ((const char*)(p_header))[16]
print ((const char*)(p_header))[17]
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break elf_read_section_header 
c
c
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break elf_read_section_header 
c
c
next
print *p_header
print elf_header->e_shoff + (elf_header->e_shentsize * index
print elf_header->e_shoff + (elf_header->e_shentsize * index)
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
c
print buf
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break fread
c
c
c
next
step
next
print offset
next
print offset
print size
step
step
print out
print (const char*) out
next
step
next
next
print size_of_cluster_bytes 
next
print cluster_to_use
next
print offset_from_cluster 
next
print starting_sector
next
print starting_pos
print starting_sector
print COS32_SECTOR_SIZE
print starting_sector
print offset_from_cluster
print starting_pos
print starting_sector
2124 * 512
next
print res
print starting_pos
next
prrint res
print res
print total_to_read
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break fat16_read
c
c
c
bt
next
layout prev
layout asm
layout prev
next
print offset
print nmemb
next
print offset
print size
next
print res
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break fat16_read
c
c
c
layout asm
layout prev
next
step
next
print fat16_get_first_cluster(item)
13 * 65535
print 13 * 65535
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
c
print buf
add-symbol-file ../build/kernelfull.o 0x100000
print buf
bt
c
print buf
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
add-symbol-file ../build/kernelfull.o 0x100000
rq
rq
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break fat16_read
c
c
c
next
stepi
step
layout asm
layout prev
stepi
step
next
step
next
print overflow
print total_to_read
next
print total_to_rad
print total_to_read
print offset+total_to_read-(64-40)
536 - 512
print 536 - 512
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
add-symbol-file ../build/kernelfull.o 0x100000
rq
rq
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
c
print buf
print buf
print buf
print buf
print buf
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break fat16_read
c
c
c
next
layout asm
layout prev
next
step
next
next
print res
next
print buf
BUG IS FIXED!!!!!!!!!!!!!!!!!!!
ECHO BUG IS FIXED
