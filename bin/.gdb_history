print res
next
print _process->task
print *_process->task
break *4194304
c
layout asm
print (unsigned char)((const char*)(0x400000))[0]
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break process_map_elf
c
c
c
next
print virt_addr
next
print virt_addr
print phys_addr
print phys_end_addr
print current
print *current
print (const char*)(phys_addr)
print (const char*)(phys_addr)[0]
print ((const char*)(phys_addr))[0]
print (unsigned char)((const char*)(phys_addr))[0]
print (unsigned char)((const char*)(phys_addr))[1]
print (unsigned char)((const char*)(phys_addr))[0]
print (unsigned char)((const char*)(virt_addr))[0]
next
print (unsigned char)((const char*)(virt_addr))[0]
print (unsigned char)((const char*)(phys_addr))[0]
c
c
next
print (unsigned char)((const char*)(phys_addr))[0]
print (unsigned char)((const char*)(phys_addr))[1]
print (unsigned char)((const char*)(phys_addr))[0]
print virt_addr
c
next
print (unsigned char)((const char*)(phys_addr))[0]
step
print (unsigned char)((const char*)phys))[0]
print (unsigned char)((const char*)phys))
print (unsigned char)((const char*)phys)[0])
print (const char*)phys)[0]
print (const char*)phys)
print (const char*)phys
print (unsigned char)((const char*)phys)[0]
next
print total_pages
print total_bytes
step
next
print virt
print phys
print (unsigned char)((const char*)phys)[0]
step
next
print (unsigned char)((const char*)phys)[0]
next
print res
next
print virt_addr
print phys_end_addr
print phys_addr
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break elfloader.c:206
c
print in_memory_size 
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break elf_load
c
next
print elf_file->section_h
print *elf_file->section_h
print *elf_file->section_h->next
print *elf_file->section_h->next->next
print *elf_file->section_h->next->next->next
print *elf_file->section_h->next->next->next->next
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break elf_load_section
c
next
print phys_addr
next
print phys_addr
print section_header->sh_size
print phys_addr
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break elf_load
c
next
next
print elf_file->sectionh
print elf_file->section_h
print *elf_file->section_h
print *elf_file->section_h->next
print (unsigned char)(const char*)(elf_file->section_h->next->phys_addr)[0]
print (unsigned char)(const char*)(elf_file->section_h->next->phys_addr)
print (unsigned char)((const char*)(elf_file->section_h->next->phys_addr)[0])
print (unsigned char)((const char*)(elf_file->section_h->next->phys_addr))[0]
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
c
break *0x400000
c
layou tasm
layout asm
stepi
stepi
c
c
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break elf_process_sht_dynsym
c
next
print dynstr_section
print phys_addr-
print dynstr_section->phys_addr
print (const char*)dynstr_section->phys_addr
print (const char*)dynstr_section->phys_addr+1
c
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break elf_load
c
next
print elf_str_table(elf_file->header)
print elf_str_table(elf_header(elf_file))
print elf_str_table(elf_header(elf_file))+1
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break elf_load
c
next
print elf_pheader(elf_header(elf_file))
print *elf_pheader(elf_header(elf_file))
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break elf_load
c
next
print elf_header(file)
print elf_header(elf_file)
print elf_pheader(elf_header(elf_file))
print elf_pheader(elf_header(elf_file))[0]
print elf_pheader(elf_header(elf_file))[1]
print elf_pheader(elf_header(elf_file))[0]
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break elf_load
c
next
next
print elf_file->virtual_base_address 
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break elf_load
c
next
print elf_file->virtual_base_address 
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break elf_load
c
next
print *elf_file
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break elf_load
c
next
print *elf_file
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break process_map_elf
c
next
print res
break *0x400000
c
bt
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break process_map_elf
c
next
print (unsigned char)((const char*)0x400000))
print (const char*)0x400000))
print (const char*)0x400000)
print (const char*)0x400000
print (const char*)0x400000+
next
nexr
next
print res
next
print res
next
layout asm
layout prev
step
next
layout asm
stepi
add-symbol-file ../build/kernelfull.o 0x100000
target remote | qemu-system-i386 -hda ./os.bin -S -gdb stdio
break elf_process_phdr_pt_load
c
next
print elf_file->physical_
print elf_file->physical_base_address 
print (const char*) elf_file->physical_base_address 
print (const char*) elf_file->physical_base_address+1
print elf_header(elf_file)+phdr->p_offset
print *phdr
print elf_header(elf_file)
print *elf_header(elf_file)
print elf_header(elf_file)+1
print elf_file->physical_base_address 
print (const char*)elf_file->physical_base_address 
print phdr->p_offset
print ((const char*)0x143f034)
print ((const char*)0x143f035)
print ((const char*)0x143f036)1
print ((const char*)0x143f034)
print ((const char*)0x143f000)
print ((const char*)0x143f000+4096)
print ((const char*)0x143f000+4096)[0]
print (unsigned char)((const char*)0x143f000+4096)[0]
print &((const char*)0x143f000+4096)[0]
print elf_header(elf_file)+phdr->p_offset
print elf_header(elf_file)
print phdr->p_offset
print elf_header(elf_file)+phdr->p_offset
print elf_header(elf_file)+4096
print elf_header(elf_file)
print 0x143f000+4096
print (void*)(0x143f000+4096)
print elf_header(elf_file)
print elf_header(elf_file)+4096
print elf_header(elf_file)+(4096)
print (void*)elf_header(elf_file)+4096
print (void*)elf_header(elf_file)+4096
print elf_header(elf_file)+4096
print elf_header(elf_file)
print elf_header(elf_file1
print elf_header(elf_file)+1
print elf_header(elf_file)+2
